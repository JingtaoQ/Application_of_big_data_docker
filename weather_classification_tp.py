# -*- coding: utf-8 -*-
"""weather-classification-TP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UIRtIHj6ikzHsjRws0hkBhsUws76MyEk

# **Imports**

Taken from : https://www.kaggle.com/datasets/utkarshsaxenadn/weather-classification-resnet152v2
"""
# Common
import keras
import numpy as np
import pandas as pd
from glob import glob
from tqdm import tqdm
import os

# Data
from tensorflow.image import resize
from sklearn.model_selection import StratifiedShuffleSplit
from tensorflow.keras.utils import load_img, img_to_array

# Data Viz
import seaborn as sns
import matplotlib.pyplot as plt

# TL Model
from tensorflow.keras.applications import ResNet50, ResNet50V2, InceptionV3, Xception, ResNet152, ResNet152V2

# Model
from keras import Sequential
from keras.layers import Dense, GlobalAvgPool2D, Dropout
from keras.models import load_model

# Callbacks 
from keras.callbacks import EarlyStopping, ModelCheckpoint

# Model Performance
from sklearn.metrics import classification_report

# Model Viz
from tensorflow.keras.utils import plot_model

"""# Data and utilities"""

# Cateories
class_names = {0: 'cloudy', 1: 'foggy', 2: 'rainy', 3: 'shine', 4: 'sunrise'}

def load_image(path):
    '''
    Takes in path of the image and load it
    '''
    img = resize(img_to_array(load_img(path))/255., (256,256))
    return img

def show_image(image, title=None):
    '''
    Takes in an Image and plot it with Matplotlib
    '''
    plt.imshow(image)
    plt.title(title)
    plt.axis('off')

def load_data(img_paths):
    X = np.zeros(shape=(len(img_paths), 256,256,3))

    for i, path in tqdm(enumerate(img_paths), desc="Loading"):
        X[i] = load_image(path)
    
    return X

"""# Load images"""

# image_paths = sorted(glob('/input_vol/*.jpg'))
image_paths = sorted(glob('/Users/douzi/Desktop/pre_weather/data/*.jpg'))
print(f"Total Number of Images : {len(image_paths)}")
print('DATA LOADED')

image_paths[:5]

images = load_data(image_paths)

"""# Prediction with pre-trained ResNet152V2 model"""

# Load model
print("LOADING MODEL")
model_v3 = load_model('ResNet152V2-Weather-Classification-03.h5')
print("MODEL LOADED")
model_v3.compile(run_eagerly=True)

# Make Predictions
preds = np.argmax(model_v3.predict(images), axis=-1)

print("\nOUTPUT BEGIN \n")
t = 0
output = []
for i in preds:

  output.append([os.path.basename(image_paths[t]),class_names[i]])
  t += 1

df = pd.DataFrame(output, columns = ['image_name','label'])

print("\nOUTPUT SAVING \n")

#Saving into output directory
from pathlib import Path  
import datetime

ts = datetime.datetime.now().timestamp()
filepath = Path('/output_vol/'+ str(ts) +'.csv')  
filepath.parent.mkdir(parents=True, exist_ok=True) 
df.to_csv(filepath)
print(preds)
